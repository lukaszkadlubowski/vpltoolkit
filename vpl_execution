#!/bin/bash
rm -f $0

if [ -f ./env.sh ] ; then
    source ./env.sh
elif [ -f $HOME/env.sh ] ; then
    source $HOME/env.sh
else
    echo "⚠ File \"env.sh\" is missing!" && exit 0
fi

[ -z "$MODE" ] && echo "⚠ Variable \"MODE\" is not defined!" && exit 0
if [ "$MODE" = "RUN" ] ; then
    CMD="$RUNDIR/run.sh"
    elif [ "$MODE" = "EVAL" ] ; then
    CMD="$RUNDIR/eval.sh"
else
    echo "⚠ Invalid \"MODE\" selected!" && exit 0
fi

[ ! -f "$CMD" ] && echo "⚠ File \"$CMD\" not found!" && exit 0
[ -z "$RUNDIR" ] && echo "⚠ Variable \"RUNDIR\" is not defined!" && exit 0

### shell command
SHELLCMD="bash"
[ "$DEBUG" = "1" ] && SHELLCMD="bash -x"
[ $GRAPHIC -eq 1 ] && SHELLCMD="xterm -hold -e $SHELLCMD"

function dockerclean()
{
    # ( docker container stop -t 1 $DOCKERID &> /dev/null )
    ( docker container rm -f $DOCKERID &> /dev/null )
    echo "Docker $DOCKER terminated."
    # docker container prune -f
    # docker system df
}

cd $RUNDIR
# echo "RUNDIR=$RUNDIR"

[ $GRAPHIC -eq 1 ] && xhost +

if [ -n "$DOCKER" ] ; then
    ### docker run ###
    trap 'dockerclean' EXIT
    # check if docker image is already installed
    docker image inspect $DOCKER &> output
    [ $? -ne 0 ] && echo "⚠ Docker image \"$DOCKER\" is required, but not locally installed!" && cat output && exit 0
    DOCKERTIMEOUT="900" # 15mn
    # DOCKEROPT="--privileged"
    [ $GRAPHIC -eq 1 ] && DOCKEROPT="$DOCKEROPT -e DISPLAY=unix$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix"
    DOCKEROPT="$DOCKEROPT -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker"
    DOCKEROPT="$DOCKEROPT --device=/dev/kvm:/dev/kvm"
    # DOCKEROPT="$DOCKEROPT -v /dev/kvm:/dev/kvm" # failure on moodle, ok at home!?
    # DOCKEROPT="$DOCKEROPT -v /root/stockage:/root/stockage"
    # DOCKEROPT="$DOCKEROPT --rm --stop-signal=SIGTERM --stop-timeout=$DOCKERTIMEOUT" # useless ???
    DOCKEROPT="$DOCKEROPT -d --rm -w $RUNDIR" # detached, auto-remove
    DOCKERID=$(docker run $DOCKEROPT $DOCKER sleep $DOCKERTIMEOUT)
    echo "Run Docker $DOCKER."
    docker cp $RUNDIR/. $DOCKERID:$RUNDIR &> /dev/null
    # TODO: copy only desired files... vpl_*.sh, env.sh, ... ???
    [ $ONLINE -eq 1 ] && docker cp $HOME/. $DOCKERID:/root &> /dev/null # assuming $HOME is /root
    docker exec -it $DOCKERID $SHELLCMD -c "$CMD $ARGS"
    docker container stop -t 0 $DOCKERID &> /dev/null
else
    ### regular run ###
    echo "Run..."
    $SHELLCMD $CMD $ARGS
    echo "Terminated."
fi

# EOF
