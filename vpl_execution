#!/bin/bash
rm -f $0

if [ -f ./env.sh ] ; then
    source ./env.sh
    elif [ -f $HOME/env.sh ] ; then
    source $HOME/env.sh
else
    echo "⚠ File \"env.sh\" is missing!" && exit 0
fi

[ -z "$MODE" ] && echo "⚠ Variable \"MODE\" is not defined!" && exit 0
if [ "$MODE" = "RUN" ] ; then
    CMD="$RUNDIR/run.sh"
    elif [ "$MODE" = "EVAL" ] ; then
    CMD="$RUNDIR/eval.sh"
else
    echo "⚠ Invalid \"MODE\" selected!" && exit 0
fi

[ ! -f "$CMD" ] && echo "⚠ File \"$CMD\" not found!" && exit 0
[ -z "$RUNDIR" ] && echo "⚠ Variable \"RUNDIR\" is not defined!" && exit 0

### shell command
SHELLCMD="bash"
[ "$DEBUG" = "1" ] && SHELLCMD="bash -x"

function error()
{
     echo "Trap Error: cleaning docker"
     docker container rm -f $DOCKERID # &> /dev/null
}

trap 'error' ERR # EXIT

cd $RUNDIR
# echo "RUNDIR=$RUNDIR"

### docker run ###
if [ -n "$DOCKER" ] ; then
    # check if docker image is already installed
    docker image inspect $DOCKER &> /dev/null
    [ $? -ne 0 ] && echo "⚠ Docker image \"$DOCKER\" is required, but not locally installed!" && exit 0
    DOCKERID=$(docker run -it -d -w $RUNDIR $DOCKER)
    # echo "DOCKERID=$DOCKERID"
    docker cp $RUNDIR/. $DOCKERID:$RUNDIR # &> /dev/null
    docker cp $HOME/. $DOCKERID:/root # &> /dev/null
    # docker exec -it $DOCKERID bash ; bash
    docker exec -it $DOCKERID $SHELLCMD -c "$CMD $ARGS"
    # echo "Docker $DOCKER terminated."
    # kill docker after 1 sec
    docker container stop -t 1 $DOCKERID # &> /dev/null
    docker container rm -f $DOCKERID # &> /dev/null
    echo "Docker $DOCKER terminated ($DOCKERID)."
    # docker container prune -f
    # docker system df
### regular run ###
else
    $SHELLCMD $CMD $ARGS
fi

# EOF
